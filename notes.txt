docker run -d -p 5000:5000 gtrpg && docker logs -f gtrpg 

docker run -it --net host gtrpg:latest bash

docker build -t gtrpg:latest .

export FLASK_DEBUG=1

flask db init
flask db migrate -m "session table"
flask db upgrade

heroku git:remote -a gtrpg

bgdg = User(username='BGDG', email='brianecerney@gmail.com', total_points=0)
db.session.add(bgdg)
db.session.commit()

frt = Category(title='Acoustic', description='Acoustic')
db.session.add(frt)
db.session.commit()

uc = UserCategory(user_id=1, category_id=2, level=1, xp=0)
db.session.add(uc)
db.session.commit()

task_1 = Task(title='Find Fingerstyle Blues Songs', description='Find Fingerstyle Blues Songs', category=cat)
db.session.add(task_1)
db.session.commit()


# Mock email handler to console
python -m smtpd -n -c DebuggingServer localhost:8025

heroku config:set MAIL_SERVER=smtp.googlemail.com
heroku config:set MAIL_PORT=587
heroku config:set MAIL_USE_TLS=1
heroku config:set MAIL_USERNAME=<your-gmail-username>
heroku config:set MAIL_PASSWORD=<your-gmail-password>


pip freeze > requirements.txt
pip install -r requirements.txt

https://hackernoon.com/dont-install-postgres-docker-pull-postgres-bee20e200198
mkdir -p $HOME/docker/volumes/postgres
docker run --rm   --name pg-docker -e POSTGRES_PASSWORD=docker -d -p 5432:5432 -v $HOME/docker/volumes/postgres:/var/lib/postgresql/data  postgres
psql -h localhost -U postgres -d postgres

heroku login
heroku apps:create gtrpg

https://gtrpg.herokuapp.com/

(venv) bgdg@bgdg-ThinkPad-T530:~/repos/gtrpg$ heroku config
=== gtrpg Config Vars
DATABASE_URL: ...

heroku addons:add heroku-postgresql:hobby-dev
Creating heroku-postgresql:hobby-dev on flask-microblog... free
Database has been created and is available
 ! This database is empty. If upgrading, you can transfer
 ! data from another database with pg:copy
Created postgresql-parallel-56076 as DATABASE_URL
Use heroku addons:docs heroku-postgresql to view documentation

heroku addons:remove heroku-postgresql:hobby-dev

heroku addons:remove heroku-postgresql:hobby-dev

heroku config:set FLASK_APP=gtrpg.py
heroku config:set LOG_TO_STDOUT=1
heroku config:set SECRET_KEY=...
Setting LOG_TO_STDOUT and restarting flask-microblog... done, v4
LOG_TO_STDOUT: 1

git push heroku <master or branch you're working on>

~/repos/gtrpg$ heroku ps
Free dyno hours quota remaining this month: 550h 0m (100%)
Free dyno usage for this app: 0h 0m (0%)
For more information on dyno sleeping and how to upgrade, see:
https://devcenter.heroku.com/articles/dyno-sleeping


heroku open

heroku ps:scale <group-name, ex. web>>=<#-of-dynos>

heroku local web

SELECT * FROM session;
SELECT * FROM "user";

- Quotes around "user" needed because postgres uses existing table named user

select * from information_schema.tables;

DELETE FROM task WHERE id = 27;

SELECT * FROM session_tasks_atable WHERE task_id = 27;

DELETE FROM session_tasks_atable WHERE task_id = 27;
